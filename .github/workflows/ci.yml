name: CI

on: push

env:
  ANDROID_NDK_VERSION: r25b
  NODE_TARGETS_DEFAULT: '12.0.0 14.0.0 16.0.0 18.0.0 19.0.0'
  NODE_TARGETS_FREEBSD: '14.0.0 16.0.0 17.0.1'
  ELECTRON_TARGETS_DEFAULT: '21.0.0'
  ELECTRON_TARGETS_FREEBSD: '16.0.0'

jobs:
  publish-prod:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs:
      - package-macos
      - package-linux
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
      - name: Set up environment
        uses: ./.github/actions/setup-linux-env
      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y reprepro
      - name: Download release assets
        uses: actions/download-artifact@v3
        with:
          name: release-assets
          path: build/release-assets/
      - name: Rename release assets
        run: releng/rename-release-assets.sh
      - name: Publish release to GitHub
        uses: softprops/action-gh-release@v1
        with:
          name: "Frida ${{ env.FRIDA_VERSION }}"
          body: "See https://frida.re/news/ for details."
          files: build/release-assets/*

  package-macos:
    # if: startsWith(github.ref, 'refs/tags/')
    needs: frida-macos
    strategy:
      matrix:
        arch: [x86_64, arm64, arm64e]
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
      - name: Package Gum devkit
        uses: ./.github/actions/package-artifact-files-as-tarball
        with:
          name: frida-gum-devkit-macos-${{ matrix.arch }}


  package-linux:
    # if: startsWith(github.ref, 'refs/tags/')
    needs: frida-linux
    strategy:
      matrix:
        arch: [x86_64, x86_64-musl, arm64, arm64-musl]
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
      - name: Package Gum devkit
        uses: ./.github/actions/package-artifact-files-as-tarball
        with:
          name: frida-gum-devkit-linux-${{ matrix.arch }}
      
  frida-macos:
    needs: sdk-macos
    strategy:
      matrix:
        arch: [x86_64, arm64, arm64e]
      fail-fast: false
    runs-on: ${{ matrix.arch == 'x86_64' && 'macos-12' || 'macos-12-arm64' }}
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
      - name: Set up environment
        uses: ./.github/actions/setup-macos-env
        # with:
        #   certificates-p12: ${{ secrets.APPLE_CERTIFICATES_P12 }}
        #   certificates-password: ${{ secrets.APPLE_CERTIFICATES_PASSWORD }}
        #   keychain-password: ${{ secrets.APPLE_KEYCHAIN_PASSWORD }}
      - name: Install Qt
        if: matrix.arch == 'x86_64'
        uses: jurplel/install-qt-action@v3
        with:
          cache: true
          setup-python: false
      - name: Build Gum libraries and tools
        run: make build/frida-macos-${{ matrix.arch }}/lib/pkgconfig/frida-gum-1.0.pc
      - name: Build Gum devkit
        run: releng/devkit.py frida-gum macos-${{ matrix.arch }} build/devkits/gum
      - name: Upload Gum devkit
        uses: actions/upload-artifact@v3
        with:
          name: frida-gum-devkit-macos-${{ matrix.arch }}
          path: build/devkits/gum/
      - name: Tear down environment
        uses: ./.github/actions/teardown-macos-env

  frida-linux:
    needs: sdk-linux
    strategy:
      matrix:
        arch: [x86_64, x86_64-musl, arm64, arm64-musl]
      fail-fast: false
    runs-on: ubuntu-latest
    container: ghcr.io/frida/x-tools-linux-${{ matrix.arch }}:latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
      - name: Set up environment
        uses: ./.github/actions/setup-linux-env
      - name: Set FRIDA_CAN_RUN_HOST_BINARIES
        if: ${{ matrix.arch == 'x86' }}
        run: echo "FRIDA_CAN_RUN_HOST_BINARIES=yes" >> $GITHUB_ENV
      - name: Configure qemu-user
        if: ${{ !startsWith(matrix.arch, 'x86') }}
        run: echo "FRIDA_QEMU_SYSROOT=/opt/x-tools/$XTOOLS_HOST/$XTOOLS_HOST/sysroot" >> $GITHUB_ENV
      - name: Install packages needed for installing Qt
        if: matrix.arch == 'x86_64'
        run: |
          apt-get update
          apt-get install -y sudo
      - name: Install Qt
        if: matrix.arch == 'x86_64'
        uses: jurplel/install-qt-action@v3
        with:
          cache: true
          setup-python: false
      - name: Build Gum libraries and tools
        run: make build/frida_thin-linux-${{ matrix.arch }}/lib/pkgconfig/frida-gum-1.0.pc
      - name: Build Gum devkit
        run: releng/devkit.py -t frida-gum linux-${{ matrix.arch }} build/devkits/gum
      - name: Upload Gum devkit
        uses: actions/upload-artifact@v3
        with:
          name: frida-gum-devkit-linux-${{ matrix.arch }}
          path: build/devkits/gum/
     

  toolchain-macos:
    strategy:
      matrix:
        arch: [x86_64, arm64]
      fail-fast: false
    runs-on: macos-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
      - name: Set up environment
        uses: ./.github/actions/setup-macos-env
        # with:
        #   certificates-p12: ${{ secrets.APPLE_CERTIFICATES_P12 }}
        #   certificates-password: ${{ secrets.APPLE_CERTIFICATES_PASSWORD }}
        #   keychain-password: ${{ secrets.APPLE_KEYCHAIN_PASSWORD }}
      - name: Roll toolchain
        run: releng/deps.py roll toolchain macos-${{ matrix.arch }}
      - name: Tear down environment
        uses: ./.github/actions/teardown-macos-env

  sdk-macos:
    needs: toolchain-macos
    strategy:
      matrix:
        arch: [x86_64, arm64, arm64e]
      fail-fast: false
    runs-on: ${{ matrix.arch == 'x86_64' && 'macos-latest' || 'macos-12-arm64' }}
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
      - name: Set up environment
        uses: ./.github/actions/setup-macos-env
        # with:
        #   certificates-p12: ${{ secrets.APPLE_CERTIFICATES_P12 }}
        #   certificates-password: ${{ secrets.APPLE_CERTIFICATES_PASSWORD }}
        #   keychain-password: ${{ secrets.APPLE_KEYCHAIN_PASSWORD }}
      - name: Roll SDK
        run: releng/deps.py roll sdk macos-${{ matrix.arch }} --activate
      - name: Tear down environment
        uses: ./.github/actions/teardown-macos-env


  toolchain-linux:
    strategy:
      matrix:
        arch: [x86_64, x86_64-musl, arm64, arm64-musl]
      fail-fast: false
    runs-on: ubuntu-latest
    container: ghcr.io/frida/x-tools-linux-${{ matrix.arch }}:latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
      - name: Set up environment
        uses: ./.github/actions/setup-linux-env
      - name: Roll toolchain
        run: releng/deps.py roll toolchain linux-${{ matrix.arch }}

  sdk-linux:
    needs: toolchain-linux
    strategy:
      matrix:
        arch: [x86_64, x86_64-musl, arm64, arm64-musl]
      fail-fast: false
    runs-on: ubuntu-latest
    container: ghcr.io/frida/x-tools-linux-${{ matrix.arch }}:latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
      - name: Set up environment
        uses: ./.github/actions/setup-linux-env
      - name: Set FRIDA_CAN_RUN_HOST_BINARIES
        if: ${{ matrix.arch == 'x86' }}
        run: echo "FRIDA_CAN_RUN_HOST_BINARIES=yes" >> $GITHUB_ENV
      - name: Configure qemu-user
        if: ${{ !startsWith(matrix.arch, 'x86') }}
        run: echo "FRIDA_QEMU_SYSROOT=/opt/x-tools/$XTOOLS_HOST/$XTOOLS_HOST/sysroot" >> $GITHUB_ENV
      - name: Roll SDK
        run: releng/deps.py roll sdk linux-${{ matrix.arch }} --activate