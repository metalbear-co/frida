name: Set up macOS environment
description: Set up everything needed to build and release things on macOS
# inputs:
#   certificates-p12:
#     required: true
#     description: The certificates to use for codesigning, as a base64-encoded .p12
#   certificates-password:
#     required: true
#     description: The password for the .p12
#   keychain-password:
#     required: true
#     description: The keychain password to use
runs:
  using: composite
  steps:
    # - name: Install the Apple certificates
    #   env:
    #     CERTIFICATES_P12: ${{ inputs.certificates-p12 }}
    #     CERTIFICATES_PASSWORD: ${{ inputs.certificates-password }}
    #     KEYCHAIN_PASSWORD: ${{ inputs.keychain-password }}
    #   run: |
    #     CERTIFICATE_PATH=$RUNNER_TEMP/apple-certificates.p12
    #     KEYCHAIN_PATH=$RUNNER_TEMP/frida-signing.keychain-db
    #     echo -n "$CERTIFICATES_P12" | base64 --decode --output $CERTIFICATE_PATH
    #     security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
    #     security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
    #     security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
    #     security import $CERTIFICATE_PATH -P "$CERTIFICATES_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
    #     security list-keychain -d user -s $KEYCHAIN_PATH
    #     rm $CERTIFICATE_PATH
    #     (
    #       MACOS_CERTID=$(security find-identity -v -p codesigning | grep "Developer ID Application: " | awk '{ print $2 }')
    #       IOS_CERTID=$(security find-identity -v -p codesigning | grep "Apple Development: " | awk '{ print $2 }')
    #       echo MACOS_CERTID=$MACOS_CERTID
    #       echo IOS_CERTID=$IOS_CERTID
    #       echo WATCHOS_CERTID=$IOS_CERTID
    #       echo TVOS_CERTID=$IOS_CERTID
    #     ) >> $GITHUB_ENV
    #   shell: bash
    - name: Configure git
      run: |
        git config --global user.name "Frida Developers"
        git config --global user.email "oleavr@frida.re"
      shell: bash
    - name: Clean repos
      run: |
        git fetch origin --prune --prune-tags
        git submodule foreach "git clean -ffdx"
        git submodule foreach "git reset --hard HEAD"
        git submodule foreach "git fetch origin --prune --prune-tags"
      shell: bash
    - name: Check out releng/meson
      run: |
        git submodule init -- releng/meson
        git submodule update --depth 1 -- releng/meson
      shell: bash
    - name: Install Python
      if: runner.arch == 'X64'
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Set Frida environment variables
      run: |
        (
          echo "FRIDA=$GITHUB_WORKSPACE"
          echo "FRIDA_VERSION=$(releng/frida_version.py)"
        ) >> $GITHUB_ENV
      shell: bash
